#!/usr/bin/env bash

# setup-git-hooks - Install validation as git hooks
# Usage: ./setup-git-hooks

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    local color=$1
    shift
    echo -e "${color}$*${NC}"
}

# Ensure we're in a git repository
if [ ! -d ".git" ]; then
    echo "Error: Not in a git repository"
    exit 1
fi

# Create hooks directory if it doesn't exist
mkdir -p .git/hooks

# Install pre-push hook
cat > .git/hooks/pre-push << 'EOF'
#!/usr/bin/env bash

# Git pre-push hook - Run validation before pushing
# Supports both fast (default) and comprehensive validation modes

set -euo pipefail

echo "🔍 Running pre-push validation..."

# Get the directory of this script to find the repository root
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)
cd "$SCRIPT_DIR"

# Check for flake-based validation
if [ -f flake.nix ] && command -v nix >/dev/null 2>&1; then
    echo "🔍 Running flake validation..."
    nix flake check --no-build || {
        echo "❌ Flake validation failed!"
        echo "💡 To skip: git push --no-verify"
        echo "💡 To include GitHub Actions: Enable in github-actions.nix"
        exit 1
    }
    echo "✅ Flake validation passed!"
else
    echo "⚠️  No flake found, skipping validation"
fi
EOF

# Make the hook executable
chmod +x .git/hooks/pre-push

log $GREEN "✅ Git hooks installed successfully!"
log $BLUE "📝 Pre-push hook will run 'nix flake check' before each push"
log $BLUE "💡 To skip validation: git push --no-verify"

# Show next steps
echo
echo "Next steps:"
echo "1. Test validation: nix flake check"
echo "2. Test git hook: git push --dry-run"
echo ""
echo "GitHub Actions validation:"
echo "  • To enable: nix run .#init-github-actions-config"
echo "  • To configure: Edit github-actions.nix"
echo "  • To run manually: nix build .#checks.x86_64-linux.github-actions"
echo "  • To view config: nix run .#show-github-actions-config"