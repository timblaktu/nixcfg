# Example template for creating encrypted secrets files
# 
# To create a new secrets file from this template:
# 1. Copy this template: cp example.yaml.template services.yaml
# 2. Edit with sops: sops services.yaml
# 3. Add your secrets in YAML format
# 4. Save and exit - sops will automatically encrypt
#
# The .sops.yaml configuration determines which keys can decrypt each file
# based on the file path. Files in secrets/common/ use both user and host keys.
#
# Example structures for different use cases:

# Simple key-value pairs
github_token: ghp_xxxxxxxxxxxxxxxxxxxx
npm_token: npm_xxxxxxxxxxxxxxxxxxxx
openai_api_key: sk-xxxxxxxxxxxxxxxxxxxx

# WiFi networks (for NetworkManager)
wirelessNetworks:
    home:
        ssid: MyHomeNetwork
        psk: super_secret_password
    work:
        ssid: WorkNetwork
        psk: another_secret_password

# Service credentials
services:
    postgres:
        host: localhost
        port: 5432
        username: dbuser
        password: dbpass
        database: myapp
    redis:
        password: redispass
        host: localhost
        port: 6379

# SSH keys (use literal block scalar |)
ssh_keys:
    github_deploy_key: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        [Your private key content would go here]
        -----END OPENSSH PRIVATE KEY-----
    
# Environment variables for systemd services
env_vars:
    API_ENDPOINT: https://api.example.com
    API_KEY: secret-key-here
    DATABASE_URL: postgresql://user:pass@localhost/db
