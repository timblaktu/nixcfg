#!/usr/bin/env bash

# validate-workflows - Run GitHub Actions locally using act
# Usage: ./validate-workflows [quick|full|job_name]

set -euo pipefail

# Configure act to use Podman
export DOCKER_HOST="unix:///run/podman/podman.sock"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
log() {
    local color=$1
    shift
    echo -e "${color}$*${NC}"
}

# Function to run a single job with timing
run_job() {
    local job_id=$1
    local start_time=$(date +%s)
    
    log $BLUE "üèÉ Running job: $job_id"
    
    if act -j "$job_id" --quiet; then
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        log $GREEN "‚úÖ $job_id completed successfully (${duration}s)"
        return 0
    else
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        log $RED "‚ùå $job_id failed (${duration}s)"
        return 1
    fi
}

# Function to run quick validation (fastest jobs)
run_quick() {
    log $YELLOW "üöÄ Running quick validation (fast jobs only)..."
    
    local failed=0
    
    # Run fastest jobs first
    run_job "verify-sops" || ((failed++))
    run_job "audit-permissions" || ((failed++))
    
    if [ $failed -eq 0 ]; then
        log $GREEN "üéâ Quick validation passed!"
        return 0
    else
        log $RED "üí• Quick validation failed ($failed jobs)"
        return 1
    fi
}

# Function to run full validation
run_full() {
    log $YELLOW "üîç Running full security validation..."
    
    local failed=0
    local total_start=$(date +%s)
    
    # Run all security jobs
    run_job "verify-sops" || ((failed++))
    run_job "audit-permissions" || ((failed++))
    run_job "gitleaks" || ((failed++))
    run_job "semgrep" || ((failed++))
    run_job "trufflehog" || ((failed++))
    
    local total_end=$(date +%s)
    local total_duration=$((total_end - total_start))
    
    if [ $failed -eq 0 ]; then
        log $GREEN "üéâ All security checks passed! (${total_duration}s total)"
        return 0
    else
        log $RED "üí• Security validation failed ($failed/5 jobs, ${total_duration}s total)"
        return 1
    fi
}

# Function to show usage
show_usage() {
    cat << EOF
validate-workflows - Run GitHub Actions locally using act

USAGE:
    ./validate-workflows [command]

COMMANDS:
    quick              Run fastest security checks (~10s)
    full               Run all security checks (~2-3min)
    <job_name>         Run specific job (verify-sops, gitleaks, etc.)
    list               Show available jobs
    help               Show this help

EXAMPLES:
    ./validate-workflows quick           # Fast pre-commit check
    ./validate-workflows full            # Complete validation
    ./validate-workflows gitleaks        # Run only gitleaks
    ./validate-workflows list            # Show available jobs

Git Hook Usage:
    ln -sf \$(pwd)/validate-workflows .git/hooks/pre-push
EOF
}

# Main script logic
case "${1:-quick}" in
    "quick")
        run_quick
        ;;
    "full")
        run_full
        ;;
    "list")
        log $BLUE "Available jobs:"
        act -l
        ;;
    "help"|"-h"|"--help")
        show_usage
        ;;
    "verify-sops"|"audit-permissions"|"gitleaks"|"semgrep"|"trufflehog")
        run_job "$1"
        ;;
    *)
        log $RED "Unknown command: $1"
        echo
        show_usage
        exit 1
        ;;
esac